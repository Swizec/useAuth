{"version":3,"file":"NetlifyIdentity.esm.js","sources":["../src/providers/NetlifyIdentity.ts"],"sourcesContent":["import { AuthOptions, AuthProviderClass, ProviderOptions } from \"../types\";\nimport NetlifyWidget, { User, InitOptions } from \"netlify-identity-widget\";\n\n// Wrapper for NetlifyIdentity conforming to auth provider interface\nexport class NetlifyIdentity implements AuthProviderClass {\n    private netlifyIdentity: any;\n    private dispatch: (eventName: string, eventData?: any) => void;\n\n    constructor(params: AuthOptions) {\n        this.dispatch = params.dispatch;\n\n        this.netlifyIdentity = NetlifyWidget;\n\n        this.netlifyIdentity.init(params as InitOptions);\n\n        this.netlifyIdentity.on(\"error\", (error: Error) => {\n            this.dispatch(\"ERROR\", {\n                error,\n                errorType: \"netlifyError\"\n            });\n        });\n        this.netlifyIdentity.on(\"login\", (user: User) => {\n            this.dispatch(\"AUTHENTICATED\", {\n                user,\n                authResult: {\n                    expiresIn: user.token?.expires_in\n                }\n            });\n        });\n        this.netlifyIdentity.on(\"init\", (user: User) => {\n            if (user) {\n                this.dispatch(\"LOGIN\");\n                this.dispatch(\"AUTHENTICATED\", {\n                    user,\n                    authResult: {\n                        expiresIn: user.token?.expires_in\n                    }\n                });\n            }\n        });\n    }\n\n    static addDefaultParams(\n        params: ProviderOptions = {},\n        callbackDomain: string\n    ) {\n        const vals = params as InitOptions;\n        return vals;\n    }\n\n    // Opens login dialog\n    public authorize() {\n        this.dispatch(\"LOGIN\");\n        this.netlifyIdentity.open(\"login\");\n    }\n\n    // Opens signup dialog\n    public signup() {\n        this.dispatch(\"LOGIN\");\n        this.netlifyIdentity.open(\"signup\");\n    }\n\n    // Logs user out on the underlying service\n    public logout(returnTo?: string) {\n        this.netlifyIdentity.logout();\n    }\n\n    // Handles login after redirect back from service\n    public async handleLoginCallback(dispatch: any): Promise<boolean> {\n        console.warn(\n            \"handleLoginCallback is unnecessary with Netlify Identity Widget\"\n        );\n        return true;\n    }\n\n    // verifies session is still valid\n    // returns fresh user info\n    public async checkSession(): Promise<{\n        user: any;\n        authResult: any;\n    }> {\n        try {\n            await this.netlifyIdentity.refresh();\n        } catch (e) {\n            throw new Error(\"Session invalid\");\n        }\n\n        const user = this.netlifyIdentity.currentUser();\n\n        if (user) {\n            return {\n                user,\n                authResult: {\n                    expiresIn: user.token?.expires_in\n                }\n            };\n        } else {\n            throw new Error(\"Session invalid\");\n        }\n    }\n\n    // Returns the userId from NetlifyIdentity shape of data\n    public userId(user: User): string | undefined {\n        return user.id;\n    }\n\n    // Returns user roles from NetlifyIdentity shape of data\n    public userRoles(user: User): string[] | null {\n        return user.app_metadata.roles;\n    }\n}\n"],"names":["NetlifyIdentity","params","this","dispatch","netlifyIdentity","NetlifyWidget","init","on","error","_this","errorType","user","authResult","expiresIn","token","_user$token","expires_in","_user$token2","addDefaultParams","callbackDomain","authorize","open","signup","logout","returnTo","handleLoginCallback","console","warn","checkSession","_this3","currentUser","_user$token3","Error","refresh","userId","id","userRoles","app_metadata","roles"],"mappings":"uCAIaA,IAAAA,aAIT,WAAYC,cACRC,KAAKC,SAAWF,EAAOE,SAEvBD,KAAKE,gBAAkBC,EAEvBH,KAAKE,gBAAgBE,KAAKL,GAE1BC,KAAKE,gBAAgBG,GAAG,QAAS,SAACC,GAC9BC,EAAKN,SAAS,QAAS,CACnBK,MAAAA,EACAE,UAAW,mBAGnBR,KAAKE,gBAAgBG,GAAG,QAAS,SAACI,SAC9BF,EAAKN,SAAS,gBAAiB,CAC3BQ,KAAAA,EACAC,WAAY,CACRC,mBAAWF,EAAKG,cAALC,EAAYC,gBAInCd,KAAKE,gBAAgBG,GAAG,OAAQ,SAACI,SACzBA,IACAF,EAAKN,SAAS,SACdM,EAAKN,SAAS,gBAAiB,CAC3BQ,KAAAA,EACAC,WAAY,CACRC,mBAAWF,EAAKG,cAALG,EAAYD,iBA/B/ChB,EAsCWkB,iBAAP,SACIjB,EACAkB,GAGA,gBAJAlB,IAAAA,EAA0B,IAGbA,8BAKVmB,UAAA,WACHlB,KAAKC,SAAS,SACdD,KAAKE,gBAAgBiB,KAAK,YAIvBC,OAAA,WACHpB,KAAKC,SAAS,SACdD,KAAKE,gBAAgBiB,KAAK,aAIvBE,OAAA,SAAOC,GACVtB,KAAKE,gBAAgBmB,YAIZE,6BAAoBtB,OAI7B,OAHAuB,QAAQC,KACJ,oFAEG,GApEf,sCAyEiBC,kCAKC1B,mBAKV,MAAMS,EAAOkB,EAAKzB,gBAAgB0B,iBAE9BnB,EACA,MAAO,CACHA,KAAAA,EACAC,WAAY,CACRC,mBAAWF,EAAKG,cAALiB,EAAYf,aAI/B,UAAUgB,MAAM,8DAfVH,EAAKzB,gBAAgB6B,oGAE3B,UAAUD,MAAM,qEAhF5B,sCAkGWE,OAAA,SAAOvB,GACV,OAAOA,EAAKwB,MAITC,UAAA,SAAUzB,GACb,OAAOA,EAAK0B,aAAaC"}