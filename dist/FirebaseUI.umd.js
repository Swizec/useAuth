!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("firebaseui"),require("firebase/app"),require("firebase/auth")):"function"==typeof define&&define.amd?define(["exports","firebaseui","firebase/app","firebase/auth"],t):t((e||self).reactUseAuth={},e.firebaseui,e.Firebase)}(this,function(e,t,i){function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=r(i);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}).apply(this,arguments)}e.FirebaseUI=function(){function e(e){if(this.dispatch=e.dispatch,this.signInOptions=e.signInOptions,e.firebaseConfig)this.firebase=n.default.initializeApp(e.firebaseConfig,"useAuth");else{if(!e.firebaseApp)throw"Please provide firebaseConfig or initialized firebaseApp";this.firebase=e.firebaseApp}this.ui=new t.auth.AuthUI(this.firebase.auth()),this.firebase.auth().onAuthStateChanged(this.onAuthStateChanged.bind(this))}var i=e.prototype;return i.onAuthStateChanged=function(e){e&&(this.dispatch("LOGIN"),this.dispatch("AUTHENTICATED",{user:this.firebase.auth().currentUser,authResult:{expiresIn:3600}}))},e.addDefaultParams=function(e,t){return s({signInOptions:[n.default.auth.EmailAuthProvider.PROVIDER_ID]},e)},i.authorize=function(){var e=this;this.dispatch("LOGIN"),this.ui.start("#firebaseui-auth-container",{signInOptions:this.signInOptions,signInFlow:"popup",callbacks:{signInSuccessWithAuthResult:function(t){return e.dispatch("AUTHENTICATED",{user:e.firebase.auth().currentUser,authResult:s({},t,{expiresIn:3600})}),!1}}})},i.signup=function(){},i.logout=function(e){this.firebase.auth().signOut()},i.userId=function(e){var t;return null==(t=this.firebase.auth().currentUser)?void 0:t.uid},i.userRoles=function(e){return[]},i.handleLoginCallback=function(){return Promise.resolve(!1)},i.checkSession=function(){try{var e=this.firebase.auth().currentUser;if(e)return Promise.resolve(e.reload()).then(function(){return{user:e,authResult:{expiresIn:3600}}});throw new Error("Session invalid")}catch(e){return Promise.reject(e)}},e}()});
//# sourceMappingURL=FirebaseUI.umd.js.map
