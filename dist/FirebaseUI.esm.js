import{auth as t}from"firebaseui";import i from"firebase/app";import"firebase/auth";function e(){return(e=Object.assign||function(t){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t}).apply(this,arguments)}var r=function(){function r(e){if(this.dispatch=e.dispatch,this.signInOptions=e.signInOptions,e.firebaseConfig)this.firebase=i.initializeApp(e.firebaseConfig,"useAuth");else{if(!e.firebaseApp)throw"Please provide firebaseConfig or initialized firebaseApp";this.firebase=e.firebaseApp}this.ui=new t.AuthUI(this.firebase.auth()),this.firebase.auth().onAuthStateChanged(this.onAuthStateChanged.bind(this))}var n=r.prototype;return n.onAuthStateChanged=function(t){t&&(this.dispatch("LOGIN"),this.dispatch("AUTHENTICATED",{user:this.firebase.auth().currentUser,authResult:{expiresIn:3600}}))},r.addDefaultParams=function(t,r){return e({signInOptions:[i.auth.EmailAuthProvider.PROVIDER_ID]},t)},n.authorize=function(){var t=this;this.dispatch("LOGIN"),this.ui.start("#firebaseui-auth-container",{signInOptions:this.signInOptions,signInFlow:"popup",callbacks:{signInSuccessWithAuthResult:function(i){return t.dispatch("AUTHENTICATED",{user:t.firebase.auth().currentUser,authResult:e({},i,{expiresIn:3600})}),!1}}})},n.signup=function(){},n.logout=function(t){this.firebase.auth().signOut()},n.userId=function(t){var i;return null==(i=this.firebase.auth().currentUser)?void 0:i.uid},n.userRoles=function(t){return[]},n.handleLoginCallback=function(){return Promise.resolve(!1)},n.checkSession=function(){try{var t=this.firebase.auth().currentUser;if(t)return Promise.resolve(t.reload()).then(function(){return{user:t,authResult:{expiresIn:3600}}});throw new Error("Session invalid")}catch(t){return Promise.reject(t)}},r}();export{r as FirebaseUI};
//# sourceMappingURL=FirebaseUI.esm.js.map
